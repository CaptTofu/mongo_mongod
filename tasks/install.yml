---

# installs mongo 

- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- name: Create the mongodb group 
  group: name=mongodb state=present 

- name: Create the mongodb user
  user: name=mongodb group=mongodb state=present

- name: Install the apt key for ubuntu
  apt_key: id=7F0CEB10 keyserver="keyserver.ubuntu.com" state=present
  when: ansible_os_family == "Debian"

- name: Install the python pycurl library
  apt: name=python-pycurl state=installed update_cache=yes
  when: ansible_os_family == "Debian"

- name: Get dist name
  shell: "lsb_release -sc"
  register: debian_version
  when: ansible_os_family == "Debian"

- name: Install the repository for Ubuntu mongodb
  apt_repository: repo="deb http://repo.mongodb.org/apt/{{ ansible_os_family|lower }} {{ debian_version.stdout }}/mongodb-org/3.0 main" state=present
  when: ansible_os_family == "Debian"
  
- name: Install the libselinux module
  yum: name=libselinux-python state=installed
  when: ansible_os_family == "RedHat"

- name: update apt cache
  apt: update_cache=yes 

- name: make sure the hostname is available in /etc/hosts
  lineinfile: dest=/etc/hosts regexp="{{ ansible_hostname }}" line="{{ hostvars[inventory_hostname].ansible_default_ipv4.address + " " + ansible_hostname }}" state=present

- name: Create the data directory for the mongod
  file: path={{ mongod_datadir_prefix }} owner=mongodb group=mongodb state=directory
  when: mongod_use_link is not defined

- name: Create source directory for the data directory link for the mongod
  file: path={{ mongod_link_to }} owner=mongodb group=mongodb state=directory
  when: mongod_use_link is defined

- name: Create link for the data directory for the mongod
  file: path={{ mongod_datadir_prefix }} owner=mongodb group=mongodb state=link src={{ mongod_link_to }}
  when: mongod_use_link is defined

- name: Install the mongodb RPM package
  yum: name={{ item }} state=installed
  with_items: mongod_pkgs
  when: ansible_os_family == "RedHat"

- name: Install the mongodb APT package
  apt: name={{ item }} state=installed update_cache=yes
  with_items: mongod_pkgs
  when: ansible_os_family == "Debian"
